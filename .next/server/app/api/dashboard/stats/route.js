"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/dashboard/stats/route";
exports.ids = ["app/api/dashboard/stats/route"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fdashboard%2Fstats%2Froute&page=%2Fapi%2Fdashboard%2Fstats%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdashboard%2Fstats%2Froute.ts&appDir=C%3A%5CUsers%5Cjesse%5CDocuments%5CNjuWa%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cjesse%5CDocuments%5CNjuWa&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fdashboard%2Fstats%2Froute&page=%2Fapi%2Fdashboard%2Fstats%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdashboard%2Fstats%2Froute.ts&appDir=C%3A%5CUsers%5Cjesse%5CDocuments%5CNjuWa%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cjesse%5CDocuments%5CNjuWa&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_node_polyfill_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/node-polyfill-headers */ \"(rsc)/./node_modules/next/dist/server/node-polyfill-headers.js\");\n/* harmony import */ var next_dist_server_node_polyfill_headers__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_node_polyfill_headers__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var C_Users_jesse_Documents_NjuWa_app_api_dashboard_stats_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/dashboard/stats/route.ts */ \"(rsc)/./app/api/dashboard/stats/route.ts\");\n\n// @ts-ignore this need to be imported from next/dist to be external\n\n\n// @ts-expect-error - replaced by webpack/turbopack loader\n\nconst AppRouteRouteModule = next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_1__.AppRouteRouteModule;\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_2__.RouteKind.APP_ROUTE,\n        page: \"/api/dashboard/stats/route\",\n        pathname: \"/api/dashboard/stats\",\n        filename: \"route\",\n        bundlePath: \"app/api/dashboard/stats/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\jesse\\\\Documents\\\\NjuWa\\\\app\\\\api\\\\dashboard\\\\stats\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_jesse_Documents_NjuWa_app_api_dashboard_stats_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/dashboard/stats/route\";\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZkYXNoYm9hcmQlMkZzdGF0cyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGZGFzaGJvYXJkJTJGc3RhdHMlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZkYXNoYm9hcmQlMkZzdGF0cyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNqZXNzZSU1Q0RvY3VtZW50cyU1Q05qdVdhJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1DJTNBJTVDVXNlcnMlNUNqZXNzZSU1Q0RvY3VtZW50cyU1Q05qdVdhJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQWdEO0FBQ2hEO0FBQzBGO0FBQzNCO0FBQy9EO0FBQ3FHO0FBQ3JHLDRCQUE0QixnSEFBMEI7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1R0FBdUc7QUFDL0c7QUFDaUo7O0FBRWpKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLz81ODlkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcIm5leHQvZGlzdC9zZXJ2ZXIvbm9kZS1wb2x5ZmlsbC1oZWFkZXJzXCI7XG4vLyBAdHMtaWdub3JlIHRoaXMgbmVlZCB0byBiZSBpbXBvcnRlZCBmcm9tIG5leHQvZGlzdCB0byBiZSBleHRlcm5hbFxuaW1wb3J0ICogYXMgbW9kdWxlIGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG4vLyBAdHMtZXhwZWN0LWVycm9yIC0gcmVwbGFjZWQgYnkgd2VicGFjay90dXJib3BhY2sgbG9hZGVyXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcVXNlcnNcXFxcamVzc2VcXFxcRG9jdW1lbnRzXFxcXE5qdVdhXFxcXGFwcFxcXFxhcGlcXFxcZGFzaGJvYXJkXFxcXHN0YXRzXFxcXHJvdXRlLnRzXCI7XG5jb25zdCBBcHBSb3V0ZVJvdXRlTW9kdWxlID0gbW9kdWxlLkFwcFJvdXRlUm91dGVNb2R1bGU7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9kYXNoYm9hcmQvc3RhdHMvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9kYXNoYm9hcmQvc3RhdHNcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2Rhc2hib2FyZC9zdGF0cy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkM6XFxcXFVzZXJzXFxcXGplc3NlXFxcXERvY3VtZW50c1xcXFxOanVXYVxcXFxhcHBcXFxcYXBpXFxcXGRhc2hib2FyZFxcXFxzdGF0c1xcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBoZWFkZXJIb29rcywgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9kYXNoYm9hcmQvc3RhdHMvcm91dGVcIjtcbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0LCBvcmlnaW5hbFBhdGhuYW1lLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fdashboard%2Fstats%2Froute&page=%2Fapi%2Fdashboard%2Fstats%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdashboard%2Fstats%2Froute.ts&appDir=C%3A%5CUsers%5Cjesse%5CDocuments%5CNjuWa%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cjesse%5CDocuments%5CNjuWa&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/dashboard/stats/route.ts":
/*!******************************************!*\
  !*** ./app/api/dashboard/stats/route.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/prisma */ \"(rsc)/./lib/prisma.ts\");\n/* harmony import */ var date_fns_addDays__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! date-fns/addDays */ \"(rsc)/./node_modules/date-fns/addDays.mjs\");\n/* harmony import */ var _lib_mock_db__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/mock-db */ \"(rsc)/./lib/mock-db.ts\");\n\n\n\n\nasync function GET() {\n    try {\n        // Skip the fallback system and always use real database data\n        // const fallbackStats = await getDashboardStatsWithFallback(prisma);\n        // \n        // if (fallbackStats) {\n        //   return NextResponse.json(fallbackStats);\n        // }\n        console.log(\"Fetching real dashboard stats from database...\");\n        // Otherwise proceed with normal database operations\n        // Get total loans count\n        const totalLoans = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"].loanRecord.count();\n        // Get active loans count - these are loans that have been disbursed and are being repaid\n        const activeLoans = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"].loanRecord.count({\n            where: {\n                status: \"ACTIVE\"\n            }\n        });\n        // Get loans ending soon (in the next 30 days)\n        const today = new Date();\n        const thirtyDaysFromNow = (0,date_fns_addDays__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(today, 30);\n        const loansEndingSoon = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"].loanRecord.count({\n            where: {\n                status: \"ACTIVE\",\n                lastInstallmentDate: {\n                    gte: today,\n                    lte: thirtyDaysFromNow\n                }\n            }\n        });\n        // Get total disbursed amount - include both ACTIVE and COMPLETED loans\n        // since both statuses mean the loan has been disbursed\n        const disbursedLoans = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"].loanRecord.findMany({\n            where: {\n                status: {\n                    in: [\n                        \"ACTIVE\",\n                        \"COMPLETED\"\n                    ]\n                }\n            },\n            select: {\n                loanAmount: true,\n                interestRate: true,\n                status: true\n            }\n        });\n        // Initialize all monetary values to 0 to avoid NaN issues\n        let totalDisbursed = 0;\n        let totalInterestEarned = 0;\n        let totalActiveInterest = 0;\n        let totalExpectedReturn = 0;\n        let totalActiveExpectedReturn = 0;\n        // Process all disbursed loans\n        disbursedLoans.forEach((loan)=>{\n            console.log(`Processing loan with status: ${loan.status}, amount: ${loan.loanAmount}, interest rate: ${loan.interestRate}%`);\n            // Add to total disbursed amount for all loans that have been disbursed\n            // This includes ACTIVE and COMPLETED loans\n            totalDisbursed += loan.loanAmount || 0;\n            // Calculate interest amount\n            const interestAmount = (loan.loanAmount || 0) * ((loan.interestRate || 0) / 100);\n            console.log(`Calculated interest amount: ${interestAmount}`);\n            // Calculate expected return (principal + interest)\n            const expectedReturn = (loan.loanAmount || 0) + interestAmount;\n            // Handle interest calculations based on loan status\n            if (loan.status === \"COMPLETED\") {\n                // For completed loans, the interest has been fully earned\n                totalInterestEarned += interestAmount;\n                console.log(`Added ${interestAmount} to totalInterestEarned (completed loan)`);\n            } else if (loan.status === \"ACTIVE\") {\n                // For active loans, track both active interest and expected return\n                totalActiveInterest += interestAmount;\n                totalActiveExpectedReturn += expectedReturn;\n                // Also add to total interest earned since this is expected to be earned\n                totalInterestEarned += interestAmount;\n                console.log(`Added ${interestAmount} to totalInterestEarned and totalActiveInterest (active loan)`);\n            }\n            // Add to total expected return for all loan types\n            totalExpectedReturn += expectedReturn;\n        });\n        console.log(\"Final calculated values:\");\n        console.log(`Total Disbursed: ${totalDisbursed}`);\n        console.log(`Total Interest Earned: ${totalInterestEarned}`);\n        console.log(`Total Active Interest: ${totalActiveInterest}`);\n        // Get upcoming payments (loans with payments due in the next 7 days)\n        const sevenDaysFromNow = (0,date_fns_addDays__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(today, 7);\n        const upcomingPayments = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"].loanRecord.findMany({\n            where: {\n                status: \"ACTIVE\",\n                firstInstallmentDate: {\n                    gte: today,\n                    lte: sevenDaysFromNow\n                }\n            },\n            include: {\n                client: {\n                    select: {\n                        name: true,\n                        idNumber: true,\n                        phoneNumber1: true\n                    }\n                }\n            },\n            orderBy: {\n                firstInstallmentDate: \"asc\"\n            },\n            take: 5\n        });\n        // Format the upcoming payments data\n        const formattedUpcomingPayments = upcomingPayments.map((payment)=>{\n            // Calculate payment amount in Kenyan Shillings\n            const totalPayable = (payment.loanAmount || 0) + (payment.loanAmount || 0) * (payment.interestRate || 0) / 100;\n            const installmentAmount = payment.loanDuration > 0 ? totalPayable / payment.loanDuration : 0;\n            return {\n                id: payment.id,\n                clientName: payment.client.name,\n                clientId: payment.client.idNumber,\n                phoneNumber: payment.client.phoneNumber1,\n                dueDate: payment.firstInstallmentDate,\n                amount: Math.round(installmentAmount * 100) / 100,\n                currency: \"KES\"\n            };\n        });\n        // Get loan status distribution - only include the four main statuses\n        const loanStatusDistribution = {\n            PENDING: await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"].loanRecord.count({\n                where: {\n                    status: \"PENDING\"\n                }\n            }),\n            ACTIVE: await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"].loanRecord.count({\n                where: {\n                    status: \"ACTIVE\"\n                }\n            }),\n            COMPLETED: await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"].loanRecord.count({\n                where: {\n                    status: \"COMPLETED\"\n                }\n            }),\n            DEFAULTED: await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"].loanRecord.count({\n                where: {\n                    status: \"DEFAULTED\"\n                }\n            })\n        };\n        // Return the stats with all monetary values defaulting to 0 if undefined\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            totalLoans: totalLoans || 0,\n            activeLoans: activeLoans || 0,\n            loansEndingSoon: loansEndingSoon || 0,\n            totalDisbursed: totalDisbursed || 0,\n            totalInterestEarned: totalInterestEarned || 0,\n            totalActiveInterest: totalActiveInterest || 0,\n            totalExpectedReturn: totalExpectedReturn || 0,\n            totalActiveExpectedReturn: totalActiveExpectedReturn || 0,\n            upcomingPayments: formattedUpcomingPayments || [],\n            loanStatusDistribution: loanStatusDistribution || {}\n        });\n    } catch (error) {\n        console.error(\"Error fetching dashboard stats:\", error);\n        // Return mock data if all else fails\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json(_lib_mock_db__WEBPACK_IMPORTED_MODULE_2__.mockDashboardStats);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/dashboard/stats/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/mock-db.ts":
/*!************************!*\
  !*** ./lib/mock-db.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mockChartData: () => (/* binding */ mockChartData),\n/* harmony export */   mockClients: () => (/* binding */ mockClients),\n/* harmony export */   mockDashboardStats: () => (/* binding */ mockDashboardStats),\n/* harmony export */   mockGuarantors: () => (/* binding */ mockGuarantors),\n/* harmony export */   mockLoanRecords: () => (/* binding */ mockLoanRecords),\n/* harmony export */   mockMediaFiles: () => (/* binding */ mockMediaFiles),\n/* harmony export */   mockRecentLoans: () => (/* binding */ mockRecentLoans),\n/* harmony export */   mockReferences: () => (/* binding */ mockReferences)\n/* harmony export */ });\n/**\r\n * Mock database for Njuwa Capital\r\n * \r\n * This file provides mock data and functions to simulate database operations\r\n * when the actual MongoDB connection is unavailable.\r\n */ // Mock client data\nconst mockClients = [\n    {\n        id: \"mock_client_1\",\n        name: \"John Doe\",\n        idNumber: \"ID123456\",\n        phoneNumber1: \"+1234567890\",\n        phoneNumber2: null,\n        businessLocation: \"Downtown Market\",\n        permitNumber: \"P-12345\",\n        homeAddress: \"123 Main St\",\n        createdAt: new Date(\"2025-01-15\"),\n        updatedAt: new Date(\"2025-01-15\")\n    },\n    {\n        id: \"mock_client_2\",\n        name: \"Jane Smith\",\n        idNumber: \"ID789012\",\n        phoneNumber1: \"+0987654321\",\n        phoneNumber2: \"+1122334455\",\n        businessLocation: \"Central Plaza\",\n        permitNumber: \"P-67890\",\n        homeAddress: \"456 Oak Ave\",\n        createdAt: new Date(\"2025-02-20\"),\n        updatedAt: new Date(\"2025-02-20\")\n    }\n];\n// Mock loan records\nconst mockLoanRecords = [\n    {\n        id: \"mock_loan_1\",\n        clientId: \"mock_client_1\",\n        loanAmount: 5000,\n        interestRate: 10,\n        registrationFee: 100,\n        loanDuration: 30,\n        applicationDate: new Date(\"2025-01-20\"),\n        disbursementDate: new Date(\"2025-01-25\"),\n        firstInstallmentDate: new Date(\"2025-02-01\"),\n        lastInstallmentDate: new Date(\"2025-02-25\"),\n        dailyPaymentCheck: true,\n        loanOfficer: \"Michael Johnson\",\n        status: \"ACTIVE\",\n        createdAt: new Date(\"2025-01-20\"),\n        updatedAt: new Date(\"2025-01-25\")\n    },\n    {\n        id: \"mock_loan_2\",\n        clientId: \"mock_client_2\",\n        loanAmount: 10000,\n        interestRate: 12,\n        registrationFee: 200,\n        loanDuration: 60,\n        applicationDate: new Date(\"2025-02-25\"),\n        disbursementDate: new Date(\"2025-03-01\"),\n        firstInstallmentDate: new Date(\"2025-03-10\"),\n        lastInstallmentDate: new Date(\"2025-05-10\"),\n        dailyPaymentCheck: false,\n        loanOfficer: \"Sarah Williams\",\n        status: \"DISBURSED\",\n        createdAt: new Date(\"2025-02-25\"),\n        updatedAt: new Date(\"2025-03-01\")\n    },\n    {\n        id: \"mock_loan_3\",\n        clientId: \"mock_client_1\",\n        loanAmount: 3000,\n        interestRate: 8,\n        registrationFee: 50,\n        loanDuration: 15,\n        applicationDate: new Date(\"2025-04-05\"),\n        disbursementDate: null,\n        firstInstallmentDate: null,\n        lastInstallmentDate: null,\n        dailyPaymentCheck: true,\n        loanOfficer: \"Michael Johnson\",\n        status: \"PENDING\",\n        createdAt: new Date(\"2025-04-05\"),\n        updatedAt: new Date(\"2025-04-05\")\n    }\n];\n// Mock guarantors\nconst mockGuarantors = [\n    {\n        id: \"mock_guarantor_1\",\n        name: \"Robert Brown\",\n        idNumber: \"ID-G12345\",\n        phoneNumber: \"+2233445566\",\n        clientId: \"mock_client_1\",\n        loanRecordId: \"mock_loan_1\",\n        createdAt: new Date(\"2025-01-20\"),\n        updatedAt: new Date(\"2025-01-20\")\n    },\n    {\n        id: \"mock_guarantor_2\",\n        name: \"Emily Davis\",\n        idNumber: \"ID-G67890\",\n        phoneNumber: \"+3344556677\",\n        clientId: \"mock_client_2\",\n        loanRecordId: \"mock_loan_2\",\n        createdAt: new Date(\"2025-02-25\"),\n        updatedAt: new Date(\"2025-02-25\")\n    }\n];\n// Mock references\nconst mockReferences = [\n    {\n        id: \"mock_reference_1\",\n        name: \"Thomas Wilson\",\n        phoneNumber: \"+4455667788\",\n        relationship: \"Friend\",\n        clientId: \"mock_client_1\",\n        loanRecordId: \"mock_loan_1\",\n        createdAt: new Date(\"2025-01-20\"),\n        updatedAt: new Date(\"2025-01-20\")\n    },\n    {\n        id: \"mock_reference_2\",\n        name: \"Patricia Moore\",\n        phoneNumber: \"+5566778899\",\n        relationship: \"Colleague\",\n        clientId: \"mock_client_1\",\n        loanRecordId: \"mock_loan_1\",\n        createdAt: new Date(\"2025-01-20\"),\n        updatedAt: new Date(\"2025-01-20\")\n    }\n];\n// Mock media files\nconst mockMediaFiles = [\n    {\n        id: \"mock_media_1\",\n        fileName: \"contract_loan1.pdf\",\n        fileType: \"CONTRACT_PDF\",\n        fileUrl: \"https://example.com/contracts/contract_loan1.pdf\",\n        description: \"Signed Contract\",\n        clientId: \"mock_client_1\",\n        loanRecordId: \"mock_loan_1\",\n        createdAt: new Date(\"2025-01-25\"),\n        updatedAt: new Date(\"2025-01-25\")\n    }\n];\n// Dashboard statistics\nconst mockDashboardStats = {\n    totalLoans: 2,\n    activeLoans: 1,\n    loansEndingSoon: 1,\n    totalDisbursed: 15000,\n    totalInterestEarned: 1500,\n    totalActiveInterest: 1000,\n    totalExpectedReturn: 16500,\n    totalActiveExpectedReturn: 11000,\n    loanStatusDistribution: {\n        PENDING: 1,\n        APPROVED: 0,\n        DISBURSED: 1,\n        ACTIVE: 1,\n        COMPLETED: 0,\n        DEFAULTED: 0,\n        REJECTED: 0\n    }\n};\n// Dashboard charts data\nconst mockChartData = {\n    monthlyLoans: [\n        {\n            month: \"Jan\",\n            count: 1,\n            amount: 5000\n        },\n        {\n            month: \"Feb\",\n            count: 1,\n            amount: 10000\n        },\n        {\n            month: \"Mar\",\n            count: 0,\n            amount: 0\n        },\n        {\n            month: \"Apr\",\n            count: 1,\n            amount: 3000\n        },\n        {\n            month: \"May\",\n            count: 0,\n            amount: 0\n        }\n    ],\n    loansByStatus: [\n        {\n            status: \"PENDING\",\n            count: 1\n        },\n        {\n            status: \"DISBURSED\",\n            count: 1\n        },\n        {\n            status: \"ACTIVE\",\n            count: 1\n        }\n    ],\n    loansByAmount: [\n        {\n            range: \"0-5000\",\n            count: 2\n        },\n        {\n            range: \"5001-10000\",\n            count: 1\n        },\n        {\n            range: \"10001+\",\n            count: 0\n        }\n    ]\n};\n// Recent loans for dashboard\nconst mockRecentLoans = mockLoanRecords.map((loan)=>{\n    const client = mockClients.find((c)=>c.id === loan.clientId);\n    return {\n        ...loan,\n        client: client || mockClients[0]\n    };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/mock-db.ts\n");

/***/ }),

/***/ "(rsc)/./lib/prisma.ts":
/*!***********************!*\
  !*** ./lib/prisma.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\n// Configure Prisma client with connection retry and timeout settings\nconst prismaClientSingleton = ()=>{\n    // Extract the connection string from environment variables\n    const url = process.env.MONGODB_URI || \"\";\n    // Create a new Prisma client with enhanced configuration\n    return new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient({\n        log: [\n            \"error\",\n            \"warn\"\n        ],\n        datasources: {\n            db: {\n                url\n            }\n        },\n        // Add connection retry and timeout settings\n        // @ts-ignore - These are valid Prisma connection options but might not be typed correctly\n        __internal: {\n            engine: {\n                connectionTimeout: 30000,\n                connectionLimit: 5,\n                retry: {\n                    max: 5,\n                    backoff: {\n                        type: \"exponential\",\n                        min: 1000,\n                        max: 5000,\n                        factor: 2\n                    }\n                }\n            }\n        }\n    });\n};\nconst globalForPrisma = global;\nconst prisma = globalForPrisma.prisma || prismaClientSingleton();\nif (true) globalForPrisma.prisma = prisma;\n// Add error handling\n// @ts-ignore - Prisma event types are not properly exposed in TypeScript\nprisma.$on(\"query\", (e)=>{\n    console.log(\"Query: \" + e.query);\n    console.log(\"Duration: \" + e.duration + \"ms\");\n});\n// @ts-ignore - Prisma event types are not properly exposed in TypeScript\nprisma.$on(\"error\", (e)=>{\n    console.error(\"Prisma Error:\", e);\n    console.error(\"Connection string (masked):\", process.env.MONGODB_URI?.replace(/\\/\\/([^:]+):([^@]+)@/, \"//[USERNAME]:[PASSWORD]@\"));\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (prisma);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvcHJpc21hLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBNkM7QUFFN0MscUVBQXFFO0FBQ3JFLE1BQU1DLHdCQUF3QjtJQUM1QiwyREFBMkQ7SUFDM0QsTUFBTUMsTUFBTUMsUUFBUUMsR0FBRyxDQUFDQyxXQUFXLElBQUk7SUFFdkMseURBQXlEO0lBQ3pELE9BQU8sSUFBSUwsd0RBQVlBLENBQUM7UUFDdEJNLEtBQUs7WUFBQztZQUFTO1NBQU87UUFDdEJDLGFBQWE7WUFDWEMsSUFBSTtnQkFDRk47WUFDRjtRQUNGO1FBQ0EsNENBQTRDO1FBQzVDLDBGQUEwRjtRQUMxRk8sWUFBWTtZQUNWQyxRQUFRO2dCQUNOQyxtQkFBbUI7Z0JBQ25CQyxpQkFBaUI7Z0JBQ2pCQyxPQUFPO29CQUNMQyxLQUFLO29CQUNMQyxTQUFTO3dCQUNQQyxNQUFNO3dCQUNOQyxLQUFLO3dCQUNMSCxLQUFLO3dCQUNMSSxRQUFRO29CQUNWO2dCQUNGO1lBQ0Y7UUFDRjtJQUNGO0FBQ0Y7QUFFQSxNQUFNQyxrQkFBa0JDO0FBRWpCLE1BQU1DLFNBQVNGLGdCQUFnQkUsTUFBTSxJQUFJcEIsd0JBQXVCO0FBRXZFLElBQUlFLElBQXlCLEVBQWNnQixnQkFBZ0JFLE1BQU0sR0FBR0E7QUFFcEUscUJBQXFCO0FBQ3JCLHlFQUF5RTtBQUN6RUEsT0FBT0MsR0FBRyxDQUFDLFNBQVMsQ0FBQ0M7SUFDbkJDLFFBQVFsQixHQUFHLENBQUMsWUFBWWlCLEVBQUVFLEtBQUs7SUFDL0JELFFBQVFsQixHQUFHLENBQUMsZUFBZWlCLEVBQUVHLFFBQVEsR0FBRztBQUMxQztBQUVBLHlFQUF5RTtBQUN6RUwsT0FBT0MsR0FBRyxDQUFDLFNBQVMsQ0FBQ0M7SUFDbkJDLFFBQVFHLEtBQUssQ0FBQyxpQkFBaUJKO0lBQy9CQyxRQUFRRyxLQUFLLENBQUMsK0JBQ1p4QixRQUFRQyxHQUFHLENBQUNDLFdBQVcsRUFBRXVCLFFBQVEsd0JBQXdCO0FBQzdEO0FBRUEsaUVBQWVQLE1BQU1BLEVBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMvLi9saWIvcHJpc21hLnRzPzk4MjIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJpc21hQ2xpZW50IH0gZnJvbSAnQHByaXNtYS9jbGllbnQnXHJcblxyXG4vLyBDb25maWd1cmUgUHJpc21hIGNsaWVudCB3aXRoIGNvbm5lY3Rpb24gcmV0cnkgYW5kIHRpbWVvdXQgc2V0dGluZ3NcclxuY29uc3QgcHJpc21hQ2xpZW50U2luZ2xldG9uID0gKCkgPT4ge1xyXG4gIC8vIEV4dHJhY3QgdGhlIGNvbm5lY3Rpb24gc3RyaW5nIGZyb20gZW52aXJvbm1lbnQgdmFyaWFibGVzXHJcbiAgY29uc3QgdXJsID0gcHJvY2Vzcy5lbnYuTU9OR09EQl9VUkkgfHwgJyc7XHJcbiAgXHJcbiAgLy8gQ3JlYXRlIGEgbmV3IFByaXNtYSBjbGllbnQgd2l0aCBlbmhhbmNlZCBjb25maWd1cmF0aW9uXHJcbiAgcmV0dXJuIG5ldyBQcmlzbWFDbGllbnQoe1xyXG4gICAgbG9nOiBbJ2Vycm9yJywgJ3dhcm4nXSxcclxuICAgIGRhdGFzb3VyY2VzOiB7XHJcbiAgICAgIGRiOiB7XHJcbiAgICAgICAgdXJsLFxyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIC8vIEFkZCBjb25uZWN0aW9uIHJldHJ5IGFuZCB0aW1lb3V0IHNldHRpbmdzXHJcbiAgICAvLyBAdHMtaWdub3JlIC0gVGhlc2UgYXJlIHZhbGlkIFByaXNtYSBjb25uZWN0aW9uIG9wdGlvbnMgYnV0IG1pZ2h0IG5vdCBiZSB0eXBlZCBjb3JyZWN0bHlcclxuICAgIF9faW50ZXJuYWw6IHtcclxuICAgICAgZW5naW5lOiB7XHJcbiAgICAgICAgY29ubmVjdGlvblRpbWVvdXQ6IDMwMDAwLCAvLyAzMCBzZWNvbmRzIChpbmNyZWFzZWQgZnJvbSAxMClcclxuICAgICAgICBjb25uZWN0aW9uTGltaXQ6IDUsIC8vIE1heGltdW0gNSBjb25uZWN0aW9uc1xyXG4gICAgICAgIHJldHJ5OiB7XHJcbiAgICAgICAgICBtYXg6IDUsIC8vIE1heGltdW0gbnVtYmVyIG9mIHJldHJpZXNcclxuICAgICAgICAgIGJhY2tvZmY6IHtcclxuICAgICAgICAgICAgdHlwZTogJ2V4cG9uZW50aWFsJyxcclxuICAgICAgICAgICAgbWluOiAxMDAwLCAvLyBNaW5pbXVtIGRlbGF5IGluIG1zXHJcbiAgICAgICAgICAgIG1heDogNTAwMCwgLy8gTWF4aW11bSBkZWxheSBpbiBtc1xyXG4gICAgICAgICAgICBmYWN0b3I6IDIsIC8vIEV4cG9uZW50aWFsIGZhY3RvclxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9LFxyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICB9KVxyXG59XHJcblxyXG5jb25zdCBnbG9iYWxGb3JQcmlzbWEgPSBnbG9iYWwgYXMgdW5rbm93biBhcyB7IHByaXNtYTogUHJpc21hQ2xpZW50IH1cclxuXHJcbmV4cG9ydCBjb25zdCBwcmlzbWEgPSBnbG9iYWxGb3JQcmlzbWEucHJpc21hIHx8IHByaXNtYUNsaWVudFNpbmdsZXRvbigpXHJcblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykgZ2xvYmFsRm9yUHJpc21hLnByaXNtYSA9IHByaXNtYVxyXG5cclxuLy8gQWRkIGVycm9yIGhhbmRsaW5nXHJcbi8vIEB0cy1pZ25vcmUgLSBQcmlzbWEgZXZlbnQgdHlwZXMgYXJlIG5vdCBwcm9wZXJseSBleHBvc2VkIGluIFR5cGVTY3JpcHRcclxucHJpc21hLiRvbigncXVlcnknLCAoZTogYW55KSA9PiB7XHJcbiAgY29uc29sZS5sb2coJ1F1ZXJ5OiAnICsgZS5xdWVyeSlcclxuICBjb25zb2xlLmxvZygnRHVyYXRpb246ICcgKyBlLmR1cmF0aW9uICsgJ21zJylcclxufSlcclxuXHJcbi8vIEB0cy1pZ25vcmUgLSBQcmlzbWEgZXZlbnQgdHlwZXMgYXJlIG5vdCBwcm9wZXJseSBleHBvc2VkIGluIFR5cGVTY3JpcHRcclxucHJpc21hLiRvbignZXJyb3InLCAoZTogYW55KSA9PiB7XHJcbiAgY29uc29sZS5lcnJvcignUHJpc21hIEVycm9yOicsIGUpXHJcbiAgY29uc29sZS5lcnJvcignQ29ubmVjdGlvbiBzdHJpbmcgKG1hc2tlZCk6JywgXHJcbiAgICBwcm9jZXNzLmVudi5NT05HT0RCX1VSST8ucmVwbGFjZSgvXFwvXFwvKFteOl0rKTooW15AXSspQC8sICcvL1tVU0VSTkFNRV06W1BBU1NXT1JEXUAnKSlcclxufSlcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHByaXNtYSJdLCJuYW1lcyI6WyJQcmlzbWFDbGllbnQiLCJwcmlzbWFDbGllbnRTaW5nbGV0b24iLCJ1cmwiLCJwcm9jZXNzIiwiZW52IiwiTU9OR09EQl9VUkkiLCJsb2ciLCJkYXRhc291cmNlcyIsImRiIiwiX19pbnRlcm5hbCIsImVuZ2luZSIsImNvbm5lY3Rpb25UaW1lb3V0IiwiY29ubmVjdGlvbkxpbWl0IiwicmV0cnkiLCJtYXgiLCJiYWNrb2ZmIiwidHlwZSIsIm1pbiIsImZhY3RvciIsImdsb2JhbEZvclByaXNtYSIsImdsb2JhbCIsInByaXNtYSIsIiRvbiIsImUiLCJjb25zb2xlIiwicXVlcnkiLCJkdXJhdGlvbiIsImVycm9yIiwicmVwbGFjZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/prisma.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/date-fns"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fdashboard%2Fstats%2Froute&page=%2Fapi%2Fdashboard%2Fstats%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdashboard%2Fstats%2Froute.ts&appDir=C%3A%5CUsers%5Cjesse%5CDocuments%5CNjuWa%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cjesse%5CDocuments%5CNjuWa&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();