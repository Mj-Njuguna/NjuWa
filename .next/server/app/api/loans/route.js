"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/loans/route";
exports.ids = ["app/api/loans/route"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Floans%2Froute&page=%2Fapi%2Floans%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Floans%2Froute.ts&appDir=C%3A%5CUsers%5Cjesse%5CDocuments%5CNjuWa%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cjesse%5CDocuments%5CNjuWa&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Floans%2Froute&page=%2Fapi%2Floans%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Floans%2Froute.ts&appDir=C%3A%5CUsers%5Cjesse%5CDocuments%5CNjuWa%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cjesse%5CDocuments%5CNjuWa&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \***************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_node_polyfill_headers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/node-polyfill-headers */ \"(rsc)/./node_modules/next/dist/server/node-polyfill-headers.js\");\n/* harmony import */ var next_dist_server_node_polyfill_headers__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_node_polyfill_headers__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var C_Users_jesse_Documents_NjuWa_app_api_loans_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/loans/route.ts */ \"(rsc)/./app/api/loans/route.ts\");\n\n// @ts-ignore this need to be imported from next/dist to be external\n\n\n// @ts-expect-error - replaced by webpack/turbopack loader\n\nconst AppRouteRouteModule = next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_1__.AppRouteRouteModule;\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_2__.RouteKind.APP_ROUTE,\n        page: \"/api/loans/route\",\n        pathname: \"/api/loans\",\n        filename: \"route\",\n        bundlePath: \"app/api/loans/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\jesse\\\\Documents\\\\NjuWa\\\\app\\\\api\\\\loans\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_jesse_Documents_NjuWa_app_api_loans_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/loans/route\";\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZsb2FucyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGbG9hbnMlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZsb2FucyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNqZXNzZSU1Q0RvY3VtZW50cyU1Q05qdVdhJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1DJTNBJTVDVXNlcnMlNUNqZXNzZSU1Q0RvY3VtZW50cyU1Q05qdVdhJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQWdEO0FBQ2hEO0FBQzBGO0FBQzNCO0FBQy9EO0FBQzBGO0FBQzFGLDRCQUE0QixnSEFBMEI7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSx1R0FBdUc7QUFDL0c7QUFDaUo7O0FBRWpKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLz9kOWIzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcIm5leHQvZGlzdC9zZXJ2ZXIvbm9kZS1wb2x5ZmlsbC1oZWFkZXJzXCI7XG4vLyBAdHMtaWdub3JlIHRoaXMgbmVlZCB0byBiZSBpbXBvcnRlZCBmcm9tIG5leHQvZGlzdCB0byBiZSBleHRlcm5hbFxuaW1wb3J0ICogYXMgbW9kdWxlIGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG4vLyBAdHMtZXhwZWN0LWVycm9yIC0gcmVwbGFjZWQgYnkgd2VicGFjay90dXJib3BhY2sgbG9hZGVyXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcVXNlcnNcXFxcamVzc2VcXFxcRG9jdW1lbnRzXFxcXE5qdVdhXFxcXGFwcFxcXFxhcGlcXFxcbG9hbnNcXFxccm91dGUudHNcIjtcbmNvbnN0IEFwcFJvdXRlUm91dGVNb2R1bGUgPSBtb2R1bGUuQXBwUm91dGVSb3V0ZU1vZHVsZTtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2xvYW5zL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvbG9hbnNcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2xvYW5zL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiQzpcXFxcVXNlcnNcXFxcamVzc2VcXFxcRG9jdW1lbnRzXFxcXE5qdVdhXFxcXGFwcFxcXFxhcGlcXFxcbG9hbnNcXFxccm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0IH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvbG9hbnMvcm91dGVcIjtcbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0LCBvcmlnaW5hbFBhdGhuYW1lLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Floans%2Froute&page=%2Fapi%2Floans%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Floans%2Froute.ts&appDir=C%3A%5CUsers%5Cjesse%5CDocuments%5CNjuWa%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cjesse%5CDocuments%5CNjuWa&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/loans/route.ts":
/*!********************************!*\
  !*** ./app/api/loans/route.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/prisma */ \"(rsc)/./lib/prisma.ts\");\n/* harmony import */ var _lib_db_fallback__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/db-fallback */ \"(rsc)/./lib/db-fallback.ts\");\n/* harmony import */ var _lib_mock_db__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/mock-db */ \"(rsc)/./lib/mock-db.ts\");\n\n\n\n\n// GET all loans\nasync function GET() {\n    try {\n        // Use the fallback system to get loans\n        const loans = await (0,_lib_db_fallback__WEBPACK_IMPORTED_MODULE_2__.getAllLoansWithFallback)(_lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json(loans);\n    } catch (error) {\n        console.error(\"Error fetching loans:\", error);\n        // If all else fails, return mock data directly\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json(_lib_mock_db__WEBPACK_IMPORTED_MODULE_3__.mockLoanRecords);\n    }\n}\n// POST a new loan\nasync function POST(request) {\n    try {\n        console.log(\"Received loan creation request\");\n        const body = await request.json();\n        console.log(\"Request body:\", JSON.stringify(body, null, 2));\n        // Validate required fields\n        if (!body.clientName || !body.idNumber || !body.phoneNumber1 || !body.businessLocation || !body.homeAddress) {\n            console.error(\"Missing required client fields\");\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"Missing required client fields\"\n            }, {\n                status: 400\n            });\n        }\n        if (!body.loanAmount || !body.interestRate || !body.loanDuration) {\n            console.error(\"Missing required loan fields\");\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"Missing required loan fields\"\n            }, {\n                status: 400\n            });\n        }\n        // Check if client with this ID already exists\n        const existingClient = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"].client.findUnique({\n            where: {\n                idNumber: body.idNumber\n            }\n        });\n        let client;\n        if (existingClient) {\n            console.log(`Client with ID ${body.idNumber} already exists, using existing client`);\n            client = existingClient;\n        } else {\n            // Create client first\n            console.log(\"Creating new client...\");\n            client = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"].client.create({\n                data: {\n                    name: body.clientName,\n                    idNumber: body.idNumber,\n                    phoneNumber1: body.phoneNumber1,\n                    phoneNumber2: body.phoneNumber2 || null,\n                    businessLocation: body.businessLocation,\n                    permitNumber: body.permitNumber || null,\n                    homeAddress: body.homeAddress\n                }\n            });\n            console.log(\"Client created successfully:\", client.id);\n        }\n        // Create loan record\n        console.log(\"Creating loan record...\");\n        // Ensure numeric values are properly converted\n        const loanAmount = typeof body.loanAmount === \"string\" ? parseFloat(body.loanAmount) : body.loanAmount;\n        const interestRate = typeof body.interestRate === \"string\" ? parseFloat(body.interestRate) : body.interestRate;\n        const registrationFee = typeof body.registrationFee === \"string\" ? parseFloat(body.registrationFee) : body.registrationFee || 0;\n        const loanDuration = typeof body.loanDuration === \"string\" ? parseInt(body.loanDuration) : body.loanDuration;\n        // Validate status is one of the allowed values\n        const validStatuses = [\n            \"PENDING\",\n            \"ACTIVE\",\n            \"COMPLETED\",\n            \"DEFAULTED\"\n        ];\n        const status = validStatuses.includes(body.status) ? body.status : \"PENDING\";\n        console.log(\"Loan data to be created:\", {\n            clientId: client.id,\n            loanAmount,\n            interestRate,\n            registrationFee,\n            loanDuration,\n            status\n        });\n        let loanRecord;\n        try {\n            loanRecord = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"].loanRecord.create({\n                data: {\n                    clientId: client.id,\n                    loanAmount,\n                    interestRate,\n                    registrationFee,\n                    loanDuration,\n                    applicationDate: new Date(body.applicationDate),\n                    disbursementDate: body.disbursementDate ? new Date(body.disbursementDate) : null,\n                    firstInstallmentDate: body.firstInstallmentDate ? new Date(body.firstInstallmentDate) : null,\n                    lastInstallmentDate: body.lastInstallmentDate ? new Date(body.lastInstallmentDate) : null,\n                    dailyPaymentCheck: body.dailyPaymentCheck || false,\n                    loanOfficer: body.loanOfficer,\n                    status\n                }\n            });\n            console.log(\"Loan record created successfully:\", loanRecord.id);\n        } catch (error) {\n            console.error(\"Error creating loan record:\", error);\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                error: \"Failed to create loan record\",\n                details: error instanceof Error ? error.message : \"Unknown error\"\n            }, {\n                status: 500\n            });\n        }\n        // Create guarantors if provided\n        if (body.guarantors && body.guarantors.length > 0) {\n            try {\n                console.log(\"Creating guarantors...\");\n                await Promise.all(body.guarantors.map((guarantor)=>_lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"].guarantor.create({\n                        data: {\n                            name: guarantor.name,\n                            idNumber: guarantor.idNumber,\n                            phoneNumber: guarantor.phoneNumber,\n                            clientId: client.id,\n                            loanRecordId: loanRecord.id\n                        }\n                    })));\n                console.log(\"Guarantors created successfully\");\n            } catch (error) {\n                console.error(\"Error creating guarantors:\", error);\n            // Continue with the process even if guarantors fail\n            }\n        }\n        // Create references if provided\n        if (body.references && body.references.length > 0) {\n            try {\n                console.log(\"Creating references...\");\n                await Promise.all(body.references.map((reference)=>_lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"].reference.create({\n                        data: {\n                            name: reference.name,\n                            phoneNumber: reference.phoneNumber,\n                            relationship: reference.relationship,\n                            clientId: client.id,\n                            loanRecordId: loanRecord.id\n                        }\n                    })));\n                console.log(\"References created successfully\");\n            } catch (error) {\n                console.error(\"Error creating references:\", error);\n            // Continue with the process even if references fail\n            }\n        }\n        // Create media files if provided\n        if (body.mediaFiles && body.mediaFiles.length > 0) {\n            try {\n                console.log(\"Creating media files...\");\n                await Promise.all(body.mediaFiles.map((file)=>_lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mediaFile.create({\n                        data: {\n                            fileName: file.fileName,\n                            fileType: file.fileType === \"application/pdf\" ? \"CONTRACT_PDF\" : \"OTHER_DOCUMENT\",\n                            fileUrl: file.fileUrl,\n                            description: file.description || null,\n                            clientId: client.id,\n                            loanRecordId: loanRecord.id\n                        }\n                    })));\n                console.log(\"Media files created successfully\");\n            } catch (error) {\n                console.error(\"Error creating media files:\", error);\n            // Continue with the process even if media files fail\n            }\n        }\n        // Fetch the newly created loan to verify it exists in the database\n        try {\n            const createdLoan = await _lib_prisma__WEBPACK_IMPORTED_MODULE_1__[\"default\"].loanRecord.findUnique({\n                where: {\n                    id: loanRecord.id\n                },\n                include: {\n                    client: true\n                }\n            });\n            if (!createdLoan) {\n                console.error(\"Loan was created but could not be retrieved\");\n            } else {\n                console.log(\"Successfully verified loan creation:\", createdLoan.id);\n            }\n        } catch (verifyError) {\n            console.error(\"Error verifying loan creation:\", verifyError);\n        }\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            message: \"Loan record created successfully\",\n            loanId: loanRecord.id,\n            clientId: client.id,\n            status: loanRecord.status\n        }, {\n            status: 201\n        });\n    } catch (error) {\n        console.error(\"Error creating loan:\", error);\n        // Return a more detailed error message\n        const errorMessage = error instanceof Error ? error.message : \"Failed to create loan record\";\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            error: \"Failed to create loan record\",\n            details: errorMessage,\n            fallbackMessage: \"Database connection issues detected. Please try again later.\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/loans/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/db-fallback.ts":
/*!****************************!*\
  !*** ./lib/db-fallback.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAllLoansWithFallback: () => (/* binding */ getAllLoansWithFallback),\n/* harmony export */   getChartDataWithFallback: () => (/* binding */ getChartDataWithFallback),\n/* harmony export */   getDashboardStatsWithFallback: () => (/* binding */ getDashboardStatsWithFallback),\n/* harmony export */   isDatabaseAvailable: () => (/* binding */ isDatabaseAvailable),\n/* harmony export */   withDatabaseFallback: () => (/* binding */ withDatabaseFallback)\n/* harmony export */ });\n/* harmony import */ var _mock_db__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mock-db */ \"(rsc)/./lib/mock-db.ts\");\n/**\r\n * Database fallback system for Njuwa Capital\r\n * \r\n * This file provides fallback mechanisms for database operations when MongoDB is unavailable.\r\n * It intercepts Prisma calls and returns mock data instead.\r\n */ \n// Timeout for database operations (ms)\nconst DB_OPERATION_TIMEOUT = 5000;\n/**\r\n * Checks if the database is available\r\n * @param prisma PrismaClient instance\r\n * @returns Promise<boolean> true if database is available, false otherwise\r\n */ async function isDatabaseAvailable(prisma) {\n    try {\n        // Set up a timeout for the database check\n        const timeoutPromise = new Promise((_, reject)=>{\n            setTimeout(()=>reject(new Error(\"Database connection timeout\")), DB_OPERATION_TIMEOUT);\n        });\n        // Try a simple database operation\n        const dbCheckPromise = prisma.$queryRaw`SELECT 1`.then(()=>true).catch(()=>false);\n        // Race the database check against the timeout\n        return await Promise.race([\n            dbCheckPromise,\n            timeoutPromise\n        ]);\n    } catch (error) {\n        console.error(\"Database availability check failed:\", error);\n        return false;\n    }\n}\n/**\r\n * Wrapper for database operations with fallback to mock data\r\n * @param operation The database operation to perform\r\n * @param fallbackData The mock data to return if the operation fails\r\n * @param operationName Name of the operation for logging\r\n * @returns Result of the operation or fallback data\r\n */ async function withDatabaseFallback(operation, fallbackData, operationName = \"Database operation\") {\n    try {\n        // Set up a timeout for the operation\n        const timeoutPromise = new Promise((_, reject)=>{\n            setTimeout(()=>reject(new Error(`${operationName} timeout`)), DB_OPERATION_TIMEOUT);\n        });\n        // Try the actual database operation\n        const operationPromise = operation();\n        // Race the operation against the timeout\n        return await Promise.race([\n            operationPromise,\n            timeoutPromise\n        ]);\n    } catch (error) {\n        console.error(`${operationName} failed, using fallback data:`, error);\n        return fallbackData;\n    }\n}\n/**\r\n * Get all loan records with fallback\r\n * @param prisma PrismaClient instance\r\n * @returns Array of loan records\r\n */ async function getAllLoansWithFallback(prisma) {\n    return withDatabaseFallback(()=>prisma.loanRecord.findMany({\n            include: {\n                client: true,\n                guarantors: true,\n                references: true,\n                mediaFiles: true\n            },\n            orderBy: {\n                createdAt: \"desc\"\n            }\n        }), _mock_db__WEBPACK_IMPORTED_MODULE_0__.mockRecentLoans, \"Get all loans\");\n}\n/**\r\n * Get dashboard statistics with fallback\r\n * @param prisma PrismaClient instance\r\n * @returns Dashboard statistics\r\n */ async function getDashboardStatsWithFallback(prisma) {\n    return withDatabaseFallback(async ()=>{\n        // Your actual database query for dashboard stats\n        const totalLoans = await prisma.loanRecord.count();\n        const activeLoans = await prisma.loanRecord.count({\n            where: {\n                status: \"ACTIVE\"\n            }\n        });\n        // ... other stats calculations\n        return {\n            totalLoans,\n            activeLoans\n        };\n    }, _mock_db__WEBPACK_IMPORTED_MODULE_0__.mockDashboardStats, \"Get dashboard stats\");\n}\n/**\r\n * Get dashboard chart data with fallback\r\n * @param prisma PrismaClient instance\r\n * @returns Chart data\r\n */ async function getChartDataWithFallback(prisma) {\n    return withDatabaseFallback(async ()=>{\n        // Your actual database query for chart data\n        // ...\n        return {\n        };\n    }, _mock_db__WEBPACK_IMPORTED_MODULE_0__.mockChartData, \"Get chart data\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/db-fallback.ts\n");

/***/ }),

/***/ "(rsc)/./lib/mock-db.ts":
/*!************************!*\
  !*** ./lib/mock-db.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mockChartData: () => (/* binding */ mockChartData),\n/* harmony export */   mockClients: () => (/* binding */ mockClients),\n/* harmony export */   mockDashboardStats: () => (/* binding */ mockDashboardStats),\n/* harmony export */   mockGuarantors: () => (/* binding */ mockGuarantors),\n/* harmony export */   mockLoanRecords: () => (/* binding */ mockLoanRecords),\n/* harmony export */   mockMediaFiles: () => (/* binding */ mockMediaFiles),\n/* harmony export */   mockRecentLoans: () => (/* binding */ mockRecentLoans),\n/* harmony export */   mockReferences: () => (/* binding */ mockReferences)\n/* harmony export */ });\n/**\r\n * Mock database for Njuwa Capital\r\n * \r\n * This file provides mock data and functions to simulate database operations\r\n * when the actual MongoDB connection is unavailable.\r\n */ // Mock client data\nconst mockClients = [\n    {\n        id: \"mock_client_1\",\n        name: \"John Doe\",\n        idNumber: \"ID123456\",\n        phoneNumber1: \"+1234567890\",\n        phoneNumber2: null,\n        businessLocation: \"Downtown Market\",\n        permitNumber: \"P-12345\",\n        homeAddress: \"123 Main St\",\n        createdAt: new Date(\"2025-01-15\"),\n        updatedAt: new Date(\"2025-01-15\")\n    },\n    {\n        id: \"mock_client_2\",\n        name: \"Jane Smith\",\n        idNumber: \"ID789012\",\n        phoneNumber1: \"+0987654321\",\n        phoneNumber2: \"+1122334455\",\n        businessLocation: \"Central Plaza\",\n        permitNumber: \"P-67890\",\n        homeAddress: \"456 Oak Ave\",\n        createdAt: new Date(\"2025-02-20\"),\n        updatedAt: new Date(\"2025-02-20\")\n    }\n];\n// Mock loan records\nconst mockLoanRecords = [\n    {\n        id: \"mock_loan_1\",\n        clientId: \"mock_client_1\",\n        loanAmount: 5000,\n        interestRate: 10,\n        registrationFee: 100,\n        loanDuration: 30,\n        applicationDate: new Date(\"2025-01-20\"),\n        disbursementDate: new Date(\"2025-01-25\"),\n        firstInstallmentDate: new Date(\"2025-02-01\"),\n        lastInstallmentDate: new Date(\"2025-02-25\"),\n        dailyPaymentCheck: true,\n        loanOfficer: \"Michael Johnson\",\n        status: \"ACTIVE\",\n        createdAt: new Date(\"2025-01-20\"),\n        updatedAt: new Date(\"2025-01-25\")\n    },\n    {\n        id: \"mock_loan_2\",\n        clientId: \"mock_client_2\",\n        loanAmount: 10000,\n        interestRate: 12,\n        registrationFee: 200,\n        loanDuration: 60,\n        applicationDate: new Date(\"2025-02-25\"),\n        disbursementDate: new Date(\"2025-03-01\"),\n        firstInstallmentDate: new Date(\"2025-03-10\"),\n        lastInstallmentDate: new Date(\"2025-05-10\"),\n        dailyPaymentCheck: false,\n        loanOfficer: \"Sarah Williams\",\n        status: \"DISBURSED\",\n        createdAt: new Date(\"2025-02-25\"),\n        updatedAt: new Date(\"2025-03-01\")\n    },\n    {\n        id: \"mock_loan_3\",\n        clientId: \"mock_client_1\",\n        loanAmount: 3000,\n        interestRate: 8,\n        registrationFee: 50,\n        loanDuration: 15,\n        applicationDate: new Date(\"2025-04-05\"),\n        disbursementDate: null,\n        firstInstallmentDate: null,\n        lastInstallmentDate: null,\n        dailyPaymentCheck: true,\n        loanOfficer: \"Michael Johnson\",\n        status: \"PENDING\",\n        createdAt: new Date(\"2025-04-05\"),\n        updatedAt: new Date(\"2025-04-05\")\n    }\n];\n// Mock guarantors\nconst mockGuarantors = [\n    {\n        id: \"mock_guarantor_1\",\n        name: \"Robert Brown\",\n        idNumber: \"ID-G12345\",\n        phoneNumber: \"+2233445566\",\n        clientId: \"mock_client_1\",\n        loanRecordId: \"mock_loan_1\",\n        createdAt: new Date(\"2025-01-20\"),\n        updatedAt: new Date(\"2025-01-20\")\n    },\n    {\n        id: \"mock_guarantor_2\",\n        name: \"Emily Davis\",\n        idNumber: \"ID-G67890\",\n        phoneNumber: \"+3344556677\",\n        clientId: \"mock_client_2\",\n        loanRecordId: \"mock_loan_2\",\n        createdAt: new Date(\"2025-02-25\"),\n        updatedAt: new Date(\"2025-02-25\")\n    }\n];\n// Mock references\nconst mockReferences = [\n    {\n        id: \"mock_reference_1\",\n        name: \"Thomas Wilson\",\n        phoneNumber: \"+4455667788\",\n        relationship: \"Friend\",\n        clientId: \"mock_client_1\",\n        loanRecordId: \"mock_loan_1\",\n        createdAt: new Date(\"2025-01-20\"),\n        updatedAt: new Date(\"2025-01-20\")\n    },\n    {\n        id: \"mock_reference_2\",\n        name: \"Patricia Moore\",\n        phoneNumber: \"+5566778899\",\n        relationship: \"Colleague\",\n        clientId: \"mock_client_1\",\n        loanRecordId: \"mock_loan_1\",\n        createdAt: new Date(\"2025-01-20\"),\n        updatedAt: new Date(\"2025-01-20\")\n    }\n];\n// Mock media files\nconst mockMediaFiles = [\n    {\n        id: \"mock_media_1\",\n        fileName: \"contract_loan1.pdf\",\n        fileType: \"CONTRACT_PDF\",\n        fileUrl: \"https://example.com/contracts/contract_loan1.pdf\",\n        description: \"Signed Contract\",\n        clientId: \"mock_client_1\",\n        loanRecordId: \"mock_loan_1\",\n        createdAt: new Date(\"2025-01-25\"),\n        updatedAt: new Date(\"2025-01-25\")\n    }\n];\n// Dashboard statistics\nconst mockDashboardStats = {\n    totalLoans: 2,\n    activeLoans: 1,\n    loansEndingSoon: 1,\n    totalDisbursed: 15000,\n    totalInterestEarned: 1500,\n    totalActiveInterest: 1000,\n    totalExpectedReturn: 16500,\n    totalActiveExpectedReturn: 11000,\n    loanStatusDistribution: {\n        PENDING: 1,\n        APPROVED: 0,\n        DISBURSED: 1,\n        ACTIVE: 1,\n        COMPLETED: 0,\n        DEFAULTED: 0,\n        REJECTED: 0\n    }\n};\n// Dashboard charts data\nconst mockChartData = {\n    monthlyLoans: [\n        {\n            month: \"Jan\",\n            count: 1,\n            amount: 5000\n        },\n        {\n            month: \"Feb\",\n            count: 1,\n            amount: 10000\n        },\n        {\n            month: \"Mar\",\n            count: 0,\n            amount: 0\n        },\n        {\n            month: \"Apr\",\n            count: 1,\n            amount: 3000\n        },\n        {\n            month: \"May\",\n            count: 0,\n            amount: 0\n        }\n    ],\n    loansByStatus: [\n        {\n            status: \"PENDING\",\n            count: 1\n        },\n        {\n            status: \"DISBURSED\",\n            count: 1\n        },\n        {\n            status: \"ACTIVE\",\n            count: 1\n        }\n    ],\n    loansByAmount: [\n        {\n            range: \"0-5000\",\n            count: 2\n        },\n        {\n            range: \"5001-10000\",\n            count: 1\n        },\n        {\n            range: \"10001+\",\n            count: 0\n        }\n    ]\n};\n// Recent loans for dashboard\nconst mockRecentLoans = mockLoanRecords.map((loan)=>{\n    const client = mockClients.find((c)=>c.id === loan.clientId);\n    return {\n        ...loan,\n        client: client || mockClients[0]\n    };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LE9BQU87UUFBRTtLQUM3QjtBQUNILEVBQUU7QUFFRiw2QkFBNkI7QUFDdEIsTUFBTUssa0JBQWtCaEQsZ0JBQWdCaUQsR0FBRyxDQUFDQyxDQUFBQTtJQUNqRCxNQUFNQyxTQUFTL0QsWUFBWWdFLElBQUksQ0FBQ0MsQ0FBQUEsSUFBS0EsRUFBRWhFLEVBQUUsS0FBSzZELEtBQUtqRCxRQUFRO0lBQzNELE9BQU87UUFDTCxHQUFHaUQsSUFBSTtRQUNQQyxRQUFRQSxVQUFVL0QsV0FBVyxDQUFDLEVBQUU7SUFDbEM7QUFDRixHQUFHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLy4vbGliL21vY2stZGIudHM/YWJhNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogTW9jayBkYXRhYmFzZSBmb3IgTmp1d2EgQ2FwaXRhbFxyXG4gKiBcclxuICogVGhpcyBmaWxlIHByb3ZpZGVzIG1vY2sgZGF0YSBhbmQgZnVuY3Rpb25zIHRvIHNpbXVsYXRlIGRhdGFiYXNlIG9wZXJhdGlvbnNcclxuICogd2hlbiB0aGUgYWN0dWFsIE1vbmdvREIgY29ubmVjdGlvbiBpcyB1bmF2YWlsYWJsZS5cclxuICovXHJcblxyXG5pbXBvcnQgeyBMb2FuU3RhdHVzLCBGaWxlVHlwZSB9IGZyb20gJ0BwcmlzbWEvY2xpZW50JztcclxuXHJcbi8vIE1vY2sgY2xpZW50IGRhdGFcclxuZXhwb3J0IGNvbnN0IG1vY2tDbGllbnRzID0gW1xyXG4gIHtcclxuICAgIGlkOiAnbW9ja19jbGllbnRfMScsXHJcbiAgICBuYW1lOiAnSm9obiBEb2UnLFxyXG4gICAgaWROdW1iZXI6ICdJRDEyMzQ1NicsXHJcbiAgICBwaG9uZU51bWJlcjE6ICcrMTIzNDU2Nzg5MCcsXHJcbiAgICBwaG9uZU51bWJlcjI6IG51bGwsXHJcbiAgICBidXNpbmVzc0xvY2F0aW9uOiAnRG93bnRvd24gTWFya2V0JyxcclxuICAgIHBlcm1pdE51bWJlcjogJ1AtMTIzNDUnLFxyXG4gICAgaG9tZUFkZHJlc3M6ICcxMjMgTWFpbiBTdCcsXHJcbiAgICBjcmVhdGVkQXQ6IG5ldyBEYXRlKCcyMDI1LTAxLTE1JyksXHJcbiAgICB1cGRhdGVkQXQ6IG5ldyBEYXRlKCcyMDI1LTAxLTE1JyksXHJcbiAgfSxcclxuICB7XHJcbiAgICBpZDogJ21vY2tfY2xpZW50XzInLFxyXG4gICAgbmFtZTogJ0phbmUgU21pdGgnLFxyXG4gICAgaWROdW1iZXI6ICdJRDc4OTAxMicsXHJcbiAgICBwaG9uZU51bWJlcjE6ICcrMDk4NzY1NDMyMScsXHJcbiAgICBwaG9uZU51bWJlcjI6ICcrMTEyMjMzNDQ1NScsXHJcbiAgICBidXNpbmVzc0xvY2F0aW9uOiAnQ2VudHJhbCBQbGF6YScsXHJcbiAgICBwZXJtaXROdW1iZXI6ICdQLTY3ODkwJyxcclxuICAgIGhvbWVBZGRyZXNzOiAnNDU2IE9hayBBdmUnLFxyXG4gICAgY3JlYXRlZEF0OiBuZXcgRGF0ZSgnMjAyNS0wMi0yMCcpLFxyXG4gICAgdXBkYXRlZEF0OiBuZXcgRGF0ZSgnMjAyNS0wMi0yMCcpLFxyXG4gIH0sXHJcbl07XHJcblxyXG4vLyBNb2NrIGxvYW4gcmVjb3Jkc1xyXG5leHBvcnQgY29uc3QgbW9ja0xvYW5SZWNvcmRzID0gW1xyXG4gIHtcclxuICAgIGlkOiAnbW9ja19sb2FuXzEnLFxyXG4gICAgY2xpZW50SWQ6ICdtb2NrX2NsaWVudF8xJyxcclxuICAgIGxvYW5BbW91bnQ6IDUwMDAsXHJcbiAgICBpbnRlcmVzdFJhdGU6IDEwLFxyXG4gICAgcmVnaXN0cmF0aW9uRmVlOiAxMDAsXHJcbiAgICBsb2FuRHVyYXRpb246IDMwLFxyXG4gICAgYXBwbGljYXRpb25EYXRlOiBuZXcgRGF0ZSgnMjAyNS0wMS0yMCcpLFxyXG4gICAgZGlzYnVyc2VtZW50RGF0ZTogbmV3IERhdGUoJzIwMjUtMDEtMjUnKSxcclxuICAgIGZpcnN0SW5zdGFsbG1lbnREYXRlOiBuZXcgRGF0ZSgnMjAyNS0wMi0wMScpLFxyXG4gICAgbGFzdEluc3RhbGxtZW50RGF0ZTogbmV3IERhdGUoJzIwMjUtMDItMjUnKSxcclxuICAgIGRhaWx5UGF5bWVudENoZWNrOiB0cnVlLFxyXG4gICAgbG9hbk9mZmljZXI6ICdNaWNoYWVsIEpvaG5zb24nLFxyXG4gICAgc3RhdHVzOiAnQUNUSVZFJyBhcyBMb2FuU3RhdHVzLFxyXG4gICAgY3JlYXRlZEF0OiBuZXcgRGF0ZSgnMjAyNS0wMS0yMCcpLFxyXG4gICAgdXBkYXRlZEF0OiBuZXcgRGF0ZSgnMjAyNS0wMS0yNScpLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgaWQ6ICdtb2NrX2xvYW5fMicsXHJcbiAgICBjbGllbnRJZDogJ21vY2tfY2xpZW50XzInLFxyXG4gICAgbG9hbkFtb3VudDogMTAwMDAsXHJcbiAgICBpbnRlcmVzdFJhdGU6IDEyLFxyXG4gICAgcmVnaXN0cmF0aW9uRmVlOiAyMDAsXHJcbiAgICBsb2FuRHVyYXRpb246IDYwLFxyXG4gICAgYXBwbGljYXRpb25EYXRlOiBuZXcgRGF0ZSgnMjAyNS0wMi0yNScpLFxyXG4gICAgZGlzYnVyc2VtZW50RGF0ZTogbmV3IERhdGUoJzIwMjUtMDMtMDEnKSxcclxuICAgIGZpcnN0SW5zdGFsbG1lbnREYXRlOiBuZXcgRGF0ZSgnMjAyNS0wMy0xMCcpLFxyXG4gICAgbGFzdEluc3RhbGxtZW50RGF0ZTogbmV3IERhdGUoJzIwMjUtMDUtMTAnKSxcclxuICAgIGRhaWx5UGF5bWVudENoZWNrOiBmYWxzZSxcclxuICAgIGxvYW5PZmZpY2VyOiAnU2FyYWggV2lsbGlhbXMnLFxyXG4gICAgc3RhdHVzOiAnRElTQlVSU0VEJyBhcyBMb2FuU3RhdHVzLFxyXG4gICAgY3JlYXRlZEF0OiBuZXcgRGF0ZSgnMjAyNS0wMi0yNScpLFxyXG4gICAgdXBkYXRlZEF0OiBuZXcgRGF0ZSgnMjAyNS0wMy0wMScpLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgaWQ6ICdtb2NrX2xvYW5fMycsXHJcbiAgICBjbGllbnRJZDogJ21vY2tfY2xpZW50XzEnLFxyXG4gICAgbG9hbkFtb3VudDogMzAwMCxcclxuICAgIGludGVyZXN0UmF0ZTogOCxcclxuICAgIHJlZ2lzdHJhdGlvbkZlZTogNTAsXHJcbiAgICBsb2FuRHVyYXRpb246IDE1LFxyXG4gICAgYXBwbGljYXRpb25EYXRlOiBuZXcgRGF0ZSgnMjAyNS0wNC0wNScpLFxyXG4gICAgZGlzYnVyc2VtZW50RGF0ZTogbnVsbCxcclxuICAgIGZpcnN0SW5zdGFsbG1lbnREYXRlOiBudWxsLFxyXG4gICAgbGFzdEluc3RhbGxtZW50RGF0ZTogbnVsbCxcclxuICAgIGRhaWx5UGF5bWVudENoZWNrOiB0cnVlLFxyXG4gICAgbG9hbk9mZmljZXI6ICdNaWNoYWVsIEpvaG5zb24nLFxyXG4gICAgc3RhdHVzOiAnUEVORElORycgYXMgTG9hblN0YXR1cyxcclxuICAgIGNyZWF0ZWRBdDogbmV3IERhdGUoJzIwMjUtMDQtMDUnKSxcclxuICAgIHVwZGF0ZWRBdDogbmV3IERhdGUoJzIwMjUtMDQtMDUnKSxcclxuICB9LFxyXG5dO1xyXG5cclxuLy8gTW9jayBndWFyYW50b3JzXHJcbmV4cG9ydCBjb25zdCBtb2NrR3VhcmFudG9ycyA9IFtcclxuICB7XHJcbiAgICBpZDogJ21vY2tfZ3VhcmFudG9yXzEnLFxyXG4gICAgbmFtZTogJ1JvYmVydCBCcm93bicsXHJcbiAgICBpZE51bWJlcjogJ0lELUcxMjM0NScsXHJcbiAgICBwaG9uZU51bWJlcjogJysyMjMzNDQ1NTY2JyxcclxuICAgIGNsaWVudElkOiAnbW9ja19jbGllbnRfMScsXHJcbiAgICBsb2FuUmVjb3JkSWQ6ICdtb2NrX2xvYW5fMScsXHJcbiAgICBjcmVhdGVkQXQ6IG5ldyBEYXRlKCcyMDI1LTAxLTIwJyksXHJcbiAgICB1cGRhdGVkQXQ6IG5ldyBEYXRlKCcyMDI1LTAxLTIwJyksXHJcbiAgfSxcclxuICB7XHJcbiAgICBpZDogJ21vY2tfZ3VhcmFudG9yXzInLFxyXG4gICAgbmFtZTogJ0VtaWx5IERhdmlzJyxcclxuICAgIGlkTnVtYmVyOiAnSUQtRzY3ODkwJyxcclxuICAgIHBob25lTnVtYmVyOiAnKzMzNDQ1NTY2NzcnLFxyXG4gICAgY2xpZW50SWQ6ICdtb2NrX2NsaWVudF8yJyxcclxuICAgIGxvYW5SZWNvcmRJZDogJ21vY2tfbG9hbl8yJyxcclxuICAgIGNyZWF0ZWRBdDogbmV3IERhdGUoJzIwMjUtMDItMjUnKSxcclxuICAgIHVwZGF0ZWRBdDogbmV3IERhdGUoJzIwMjUtMDItMjUnKSxcclxuICB9LFxyXG5dO1xyXG5cclxuLy8gTW9jayByZWZlcmVuY2VzXHJcbmV4cG9ydCBjb25zdCBtb2NrUmVmZXJlbmNlcyA9IFtcclxuICB7XHJcbiAgICBpZDogJ21vY2tfcmVmZXJlbmNlXzEnLFxyXG4gICAgbmFtZTogJ1Rob21hcyBXaWxzb24nLFxyXG4gICAgcGhvbmVOdW1iZXI6ICcrNDQ1NTY2Nzc4OCcsXHJcbiAgICByZWxhdGlvbnNoaXA6ICdGcmllbmQnLFxyXG4gICAgY2xpZW50SWQ6ICdtb2NrX2NsaWVudF8xJyxcclxuICAgIGxvYW5SZWNvcmRJZDogJ21vY2tfbG9hbl8xJyxcclxuICAgIGNyZWF0ZWRBdDogbmV3IERhdGUoJzIwMjUtMDEtMjAnKSxcclxuICAgIHVwZGF0ZWRBdDogbmV3IERhdGUoJzIwMjUtMDEtMjAnKSxcclxuICB9LFxyXG4gIHtcclxuICAgIGlkOiAnbW9ja19yZWZlcmVuY2VfMicsXHJcbiAgICBuYW1lOiAnUGF0cmljaWEgTW9vcmUnLFxyXG4gICAgcGhvbmVOdW1iZXI6ICcrNTU2Njc3ODg5OScsXHJcbiAgICByZWxhdGlvbnNoaXA6ICdDb2xsZWFndWUnLFxyXG4gICAgY2xpZW50SWQ6ICdtb2NrX2NsaWVudF8xJyxcclxuICAgIGxvYW5SZWNvcmRJZDogJ21vY2tfbG9hbl8xJyxcclxuICAgIGNyZWF0ZWRBdDogbmV3IERhdGUoJzIwMjUtMDEtMjAnKSxcclxuICAgIHVwZGF0ZWRBdDogbmV3IERhdGUoJzIwMjUtMDEtMjAnKSxcclxuICB9LFxyXG5dO1xyXG5cclxuLy8gTW9jayBtZWRpYSBmaWxlc1xyXG5leHBvcnQgY29uc3QgbW9ja01lZGlhRmlsZXMgPSBbXHJcbiAge1xyXG4gICAgaWQ6ICdtb2NrX21lZGlhXzEnLFxyXG4gICAgZmlsZU5hbWU6ICdjb250cmFjdF9sb2FuMS5wZGYnLFxyXG4gICAgZmlsZVR5cGU6ICdDT05UUkFDVF9QREYnIGFzIEZpbGVUeXBlLFxyXG4gICAgZmlsZVVybDogJ2h0dHBzOi8vZXhhbXBsZS5jb20vY29udHJhY3RzL2NvbnRyYWN0X2xvYW4xLnBkZicsXHJcbiAgICBkZXNjcmlwdGlvbjogJ1NpZ25lZCBDb250cmFjdCcsXHJcbiAgICBjbGllbnRJZDogJ21vY2tfY2xpZW50XzEnLFxyXG4gICAgbG9hblJlY29yZElkOiAnbW9ja19sb2FuXzEnLFxyXG4gICAgY3JlYXRlZEF0OiBuZXcgRGF0ZSgnMjAyNS0wMS0yNScpLFxyXG4gICAgdXBkYXRlZEF0OiBuZXcgRGF0ZSgnMjAyNS0wMS0yNScpLFxyXG4gIH0sXHJcbl07XHJcblxyXG4vLyBEYXNoYm9hcmQgc3RhdGlzdGljc1xyXG5leHBvcnQgY29uc3QgbW9ja0Rhc2hib2FyZFN0YXRzID0ge1xyXG4gIHRvdGFsTG9hbnM6IDIsXHJcbiAgYWN0aXZlTG9hbnM6IDEsXHJcbiAgbG9hbnNFbmRpbmdTb29uOiAxLFxyXG4gIHRvdGFsRGlzYnVyc2VkOiAxNTAwMCxcclxuICB0b3RhbEludGVyZXN0RWFybmVkOiAxNTAwLFxyXG4gIHRvdGFsQWN0aXZlSW50ZXJlc3Q6IDEwMDAsXHJcbiAgdG90YWxFeHBlY3RlZFJldHVybjogMTY1MDAsIC8vIFByaW5jaXBhbCArIEludGVyZXN0XHJcbiAgdG90YWxBY3RpdmVFeHBlY3RlZFJldHVybjogMTEwMDAsIC8vIEFjdGl2ZSBsb2FucyBwcmluY2lwYWwgKyBpbnRlcmVzdFxyXG4gIGxvYW5TdGF0dXNEaXN0cmlidXRpb246IHtcclxuICAgIFBFTkRJTkc6IDEsXHJcbiAgICBBUFBST1ZFRDogMCxcclxuICAgIERJU0JVUlNFRDogMSxcclxuICAgIEFDVElWRTogMSxcclxuICAgIENPTVBMRVRFRDogMCxcclxuICAgIERFRkFVTFRFRDogMCxcclxuICAgIFJFSkVDVEVEOiAwLFxyXG4gIH1cclxufTtcclxuXHJcbi8vIERhc2hib2FyZCBjaGFydHMgZGF0YVxyXG5leHBvcnQgY29uc3QgbW9ja0NoYXJ0RGF0YSA9IHtcclxuICBtb250aGx5TG9hbnM6IFtcclxuICAgIHsgbW9udGg6ICdKYW4nLCBjb3VudDogMSwgYW1vdW50OiA1MDAwIH0sXHJcbiAgICB7IG1vbnRoOiAnRmViJywgY291bnQ6IDEsIGFtb3VudDogMTAwMDAgfSxcclxuICAgIHsgbW9udGg6ICdNYXInLCBjb3VudDogMCwgYW1vdW50OiAwIH0sXHJcbiAgICB7IG1vbnRoOiAnQXByJywgY291bnQ6IDEsIGFtb3VudDogMzAwMCB9LFxyXG4gICAgeyBtb250aDogJ01heScsIGNvdW50OiAwLCBhbW91bnQ6IDAgfSxcclxuICBdLFxyXG4gIGxvYW5zQnlTdGF0dXM6IFtcclxuICAgIHsgc3RhdHVzOiAnUEVORElORycsIGNvdW50OiAxIH0sXHJcbiAgICB7IHN0YXR1czogJ0RJU0JVUlNFRCcsIGNvdW50OiAxIH0sXHJcbiAgICB7IHN0YXR1czogJ0FDVElWRScsIGNvdW50OiAxIH0sXHJcbiAgXSxcclxuICBsb2Fuc0J5QW1vdW50OiBbXHJcbiAgICB7IHJhbmdlOiAnMC01MDAwJywgY291bnQ6IDIgfSxcclxuICAgIHsgcmFuZ2U6ICc1MDAxLTEwMDAwJywgY291bnQ6IDEgfSxcclxuICAgIHsgcmFuZ2U6ICcxMDAwMSsnLCBjb3VudDogMCB9LFxyXG4gIF1cclxufTtcclxuXHJcbi8vIFJlY2VudCBsb2FucyBmb3IgZGFzaGJvYXJkXHJcbmV4cG9ydCBjb25zdCBtb2NrUmVjZW50TG9hbnMgPSBtb2NrTG9hblJlY29yZHMubWFwKGxvYW4gPT4ge1xyXG4gIGNvbnN0IGNsaWVudCA9IG1vY2tDbGllbnRzLmZpbmQoYyA9PiBjLmlkID09PSBsb2FuLmNsaWVudElkKTtcclxuICByZXR1cm4ge1xyXG4gICAgLi4ubG9hbixcclxuICAgIGNsaWVudDogY2xpZW50IHx8IG1vY2tDbGllbnRzWzBdLFxyXG4gIH07XHJcbn0pO1xyXG4iXSwibmFtZXMiOlsibW9ja0NsaWVudHMiLCJpZCIsIm5hbWUiLCJpZE51bWJlciIsInBob25lTnVtYmVyMSIsInBob25lTnVtYmVyMiIsImJ1c2luZXNzTG9jYXRpb24iLCJwZXJtaXROdW1iZXIiLCJob21lQWRkcmVzcyIsImNyZWF0ZWRBdCIsIkRhdGUiLCJ1cGRhdGVkQXQiLCJtb2NrTG9hblJlY29yZHMiLCJjbGllbnRJZCIsImxvYW5BbW91bnQiLCJpbnRlcmVzdFJhdGUiLCJyZWdpc3RyYXRpb25GZWUiLCJsb2FuRHVyYXRpb24iLCJhcHBsaWNhdGlvbkRhdGUiLCJkaXNidXJzZW1lbnREYXRlIiwiZmlyc3RJbnN0YWxsbWVudERhdGUiLCJsYXN0SW5zdGFsbG1lbnREYXRlIiwiZGFpbHlQYXltZW50Q2hlY2siLCJsb2FuT2ZmaWNlciIsInN0YXR1cyIsIm1vY2tHdWFyYW50b3JzIiwicGhvbmVOdW1iZXIiLCJsb2FuUmVjb3JkSWQiLCJtb2NrUmVmZXJlbmNlcyIsInJlbGF0aW9uc2hpcCIsIm1vY2tNZWRpYUZpbGVzIiwiZmlsZU5hbWUiLCJmaWxlVHlwZSIsImZpbGVVcmwiLCJkZXNjcmlwdGlvbiIsIm1vY2tEYXNoYm9hcmRTdGF0cyIsInRvdGFsTG9hbnMiLCJhY3RpdmVMb2FucyIsImxvYW5zRW5kaW5nU29vbiIsInRvdGFsRGlzYnVyc2VkIiwidG90YWxJbnRlcmVzdEVhcm5lZCIsInRvdGFsQWN0aXZlSW50ZXJlc3QiLCJ0b3RhbEV4cGVjdGVkUmV0dXJuIiwidG90YWxBY3RpdmVFeHBlY3RlZFJldHVybiIsImxvYW5TdGF0dXNEaXN0cmlidXRpb24iLCJQRU5ESU5HIiwiQVBQUk9WRUQiLCJESVNCVVJTRUQiLCJBQ1RJVkUiLCJDT01QTEVURUQiLCJERUZBVUxURUQiLCJSRUpFQ1RFRCIsIm1vY2tDaGFydERhdGEiLCJtb250aGx5TG9hbnMiLCJtb250aCIsImNvdW50IiwiYW1vdW50IiwibG9hbnNCeVN0YXR1cyIsImxvYW5zQnlBbW91bnQiLCJyYW5nZSIsIm1vY2tSZWNlbnRMb2FucyIsIm1hcCIsImxvYW4iLCJjbGllbnQiLCJmaW5kIiwiYyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/mock-db.ts\n");

/***/ }),

/***/ "(rsc)/./lib/prisma.ts":
/*!***********************!*\
  !*** ./lib/prisma.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\n// Configure Prisma client with connection retry and timeout settings\nconst prismaClientSingleton = ()=>{\n    // Extract the connection string from environment variables\n    const url = process.env.MONGODB_URI || \"\";\n    // Create a new Prisma client with enhanced configuration\n    return new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient({\n        log: [\n            \"error\",\n            \"warn\"\n        ],\n        datasources: {\n            db: {\n                url\n            }\n        },\n        // Add connection retry and timeout settings\n        // @ts-ignore - These are valid Prisma connection options but might not be typed correctly\n        __internal: {\n            engine: {\n                connectionTimeout: 30000,\n                connectionLimit: 5,\n                retry: {\n                    max: 5,\n                    backoff: {\n                        type: \"exponential\",\n                        min: 1000,\n                        max: 5000,\n                        factor: 2\n                    }\n                }\n            }\n        }\n    });\n};\nconst globalForPrisma = global;\nconst prisma = globalForPrisma.prisma || prismaClientSingleton();\nif (true) globalForPrisma.prisma = prisma;\n// Add error handling\n// @ts-ignore - Prisma event types are not properly exposed in TypeScript\nprisma.$on(\"query\", (e)=>{\n    console.log(\"Query: \" + e.query);\n    console.log(\"Duration: \" + e.duration + \"ms\");\n});\n// @ts-ignore - Prisma event types are not properly exposed in TypeScript\nprisma.$on(\"error\", (e)=>{\n    console.error(\"Prisma Error:\", e);\n    console.error(\"Connection string (masked):\", process.env.MONGODB_URI?.replace(/\\/\\/([^:]+):([^@]+)@/, \"//[USERNAME]:[PASSWORD]@\"));\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (prisma);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvcHJpc21hLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBNkM7QUFFN0MscUVBQXFFO0FBQ3JFLE1BQU1DLHdCQUF3QjtJQUM1QiwyREFBMkQ7SUFDM0QsTUFBTUMsTUFBTUMsUUFBUUMsR0FBRyxDQUFDQyxXQUFXLElBQUk7SUFFdkMseURBQXlEO0lBQ3pELE9BQU8sSUFBSUwsd0RBQVlBLENBQUM7UUFDdEJNLEtBQUs7WUFBQztZQUFTO1NBQU87UUFDdEJDLGFBQWE7WUFDWEMsSUFBSTtnQkFDRk47WUFDRjtRQUNGO1FBQ0EsNENBQTRDO1FBQzVDLDBGQUEwRjtRQUMxRk8sWUFBWTtZQUNWQyxRQUFRO2dCQUNOQyxtQkFBbUI7Z0JBQ25CQyxpQkFBaUI7Z0JBQ2pCQyxPQUFPO29CQUNMQyxLQUFLO29CQUNMQyxTQUFTO3dCQUNQQyxNQUFNO3dCQUNOQyxLQUFLO3dCQUNMSCxLQUFLO3dCQUNMSSxRQUFRO29CQUNWO2dCQUNGO1lBQ0Y7UUFDRjtJQUNGO0FBQ0Y7QUFFQSxNQUFNQyxrQkFBa0JDO0FBRWpCLE1BQU1DLFNBQVNGLGdCQUFnQkUsTUFBTSxJQUFJcEIsd0JBQXVCO0FBRXZFLElBQUlFLElBQXlCLEVBQWNnQixnQkFBZ0JFLE1BQU0sR0FBR0E7QUFFcEUscUJBQXFCO0FBQ3JCLHlFQUF5RTtBQUN6RUEsT0FBT0MsR0FBRyxDQUFDLFNBQVMsQ0FBQ0M7SUFDbkJDLFFBQVFsQixHQUFHLENBQUMsWUFBWWlCLEVBQUVFLEtBQUs7SUFDL0JELFFBQVFsQixHQUFHLENBQUMsZUFBZWlCLEVBQUVHLFFBQVEsR0FBRztBQUMxQztBQUVBLHlFQUF5RTtBQUN6RUwsT0FBT0MsR0FBRyxDQUFDLFNBQVMsQ0FBQ0M7SUFDbkJDLFFBQVFHLEtBQUssQ0FBQyxpQkFBaUJKO0lBQy9CQyxRQUFRRyxLQUFLLENBQUMsK0JBQ1p4QixRQUFRQyxHQUFHLENBQUNDLFdBQVcsRUFBRXVCLFFBQVEsd0JBQXdCO0FBQzdEO0FBRUEsaUVBQWVQLE1BQU1BLEVBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZXh0anMvLi9saWIvcHJpc21hLnRzPzk4MjIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJpc21hQ2xpZW50IH0gZnJvbSAnQHByaXNtYS9jbGllbnQnXHJcblxyXG4vLyBDb25maWd1cmUgUHJpc21hIGNsaWVudCB3aXRoIGNvbm5lY3Rpb24gcmV0cnkgYW5kIHRpbWVvdXQgc2V0dGluZ3NcclxuY29uc3QgcHJpc21hQ2xpZW50U2luZ2xldG9uID0gKCkgPT4ge1xyXG4gIC8vIEV4dHJhY3QgdGhlIGNvbm5lY3Rpb24gc3RyaW5nIGZyb20gZW52aXJvbm1lbnQgdmFyaWFibGVzXHJcbiAgY29uc3QgdXJsID0gcHJvY2Vzcy5lbnYuTU9OR09EQl9VUkkgfHwgJyc7XHJcbiAgXHJcbiAgLy8gQ3JlYXRlIGEgbmV3IFByaXNtYSBjbGllbnQgd2l0aCBlbmhhbmNlZCBjb25maWd1cmF0aW9uXHJcbiAgcmV0dXJuIG5ldyBQcmlzbWFDbGllbnQoe1xyXG4gICAgbG9nOiBbJ2Vycm9yJywgJ3dhcm4nXSxcclxuICAgIGRhdGFzb3VyY2VzOiB7XHJcbiAgICAgIGRiOiB7XHJcbiAgICAgICAgdXJsLFxyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICAgIC8vIEFkZCBjb25uZWN0aW9uIHJldHJ5IGFuZCB0aW1lb3V0IHNldHRpbmdzXHJcbiAgICAvLyBAdHMtaWdub3JlIC0gVGhlc2UgYXJlIHZhbGlkIFByaXNtYSBjb25uZWN0aW9uIG9wdGlvbnMgYnV0IG1pZ2h0IG5vdCBiZSB0eXBlZCBjb3JyZWN0bHlcclxuICAgIF9faW50ZXJuYWw6IHtcclxuICAgICAgZW5naW5lOiB7XHJcbiAgICAgICAgY29ubmVjdGlvblRpbWVvdXQ6IDMwMDAwLCAvLyAzMCBzZWNvbmRzIChpbmNyZWFzZWQgZnJvbSAxMClcclxuICAgICAgICBjb25uZWN0aW9uTGltaXQ6IDUsIC8vIE1heGltdW0gNSBjb25uZWN0aW9uc1xyXG4gICAgICAgIHJldHJ5OiB7XHJcbiAgICAgICAgICBtYXg6IDUsIC8vIE1heGltdW0gbnVtYmVyIG9mIHJldHJpZXNcclxuICAgICAgICAgIGJhY2tvZmY6IHtcclxuICAgICAgICAgICAgdHlwZTogJ2V4cG9uZW50aWFsJyxcclxuICAgICAgICAgICAgbWluOiAxMDAwLCAvLyBNaW5pbXVtIGRlbGF5IGluIG1zXHJcbiAgICAgICAgICAgIG1heDogNTAwMCwgLy8gTWF4aW11bSBkZWxheSBpbiBtc1xyXG4gICAgICAgICAgICBmYWN0b3I6IDIsIC8vIEV4cG9uZW50aWFsIGZhY3RvclxyXG4gICAgICAgICAgfSxcclxuICAgICAgICB9LFxyXG4gICAgICB9LFxyXG4gICAgfSxcclxuICB9KVxyXG59XHJcblxyXG5jb25zdCBnbG9iYWxGb3JQcmlzbWEgPSBnbG9iYWwgYXMgdW5rbm93biBhcyB7IHByaXNtYTogUHJpc21hQ2xpZW50IH1cclxuXHJcbmV4cG9ydCBjb25zdCBwcmlzbWEgPSBnbG9iYWxGb3JQcmlzbWEucHJpc21hIHx8IHByaXNtYUNsaWVudFNpbmdsZXRvbigpXHJcblxyXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykgZ2xvYmFsRm9yUHJpc21hLnByaXNtYSA9IHByaXNtYVxyXG5cclxuLy8gQWRkIGVycm9yIGhhbmRsaW5nXHJcbi8vIEB0cy1pZ25vcmUgLSBQcmlzbWEgZXZlbnQgdHlwZXMgYXJlIG5vdCBwcm9wZXJseSBleHBvc2VkIGluIFR5cGVTY3JpcHRcclxucHJpc21hLiRvbigncXVlcnknLCAoZTogYW55KSA9PiB7XHJcbiAgY29uc29sZS5sb2coJ1F1ZXJ5OiAnICsgZS5xdWVyeSlcclxuICBjb25zb2xlLmxvZygnRHVyYXRpb246ICcgKyBlLmR1cmF0aW9uICsgJ21zJylcclxufSlcclxuXHJcbi8vIEB0cy1pZ25vcmUgLSBQcmlzbWEgZXZlbnQgdHlwZXMgYXJlIG5vdCBwcm9wZXJseSBleHBvc2VkIGluIFR5cGVTY3JpcHRcclxucHJpc21hLiRvbignZXJyb3InLCAoZTogYW55KSA9PiB7XHJcbiAgY29uc29sZS5lcnJvcignUHJpc21hIEVycm9yOicsIGUpXHJcbiAgY29uc29sZS5lcnJvcignQ29ubmVjdGlvbiBzdHJpbmcgKG1hc2tlZCk6JywgXHJcbiAgICBwcm9jZXNzLmVudi5NT05HT0RCX1VSST8ucmVwbGFjZSgvXFwvXFwvKFteOl0rKTooW15AXSspQC8sICcvL1tVU0VSTkFNRV06W1BBU1NXT1JEXUAnKSlcclxufSlcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHByaXNtYSJdLCJuYW1lcyI6WyJQcmlzbWFDbGllbnQiLCJwcmlzbWFDbGllbnRTaW5nbGV0b24iLCJ1cmwiLCJwcm9jZXNzIiwiZW52IiwiTU9OR09EQl9VUkkiLCJsb2ciLCJkYXRhc291cmNlcyIsImRiIiwiX19pbnRlcm5hbCIsImVuZ2luZSIsImNvbm5lY3Rpb25UaW1lb3V0IiwiY29ubmVjdGlvbkxpbWl0IiwicmV0cnkiLCJtYXgiLCJiYWNrb2ZmIiwidHlwZSIsIm1pbiIsImZhY3RvciIsImdsb2JhbEZvclByaXNtYSIsImdsb2JhbCIsInByaXNtYSIsIiRvbiIsImUiLCJjb25zb2xlIiwicXVlcnkiLCJkdXJhdGlvbiIsImVycm9yIiwicmVwbGFjZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/prisma.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Floans%2Froute&page=%2Fapi%2Floans%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Floans%2Froute.ts&appDir=C%3A%5CUsers%5Cjesse%5CDocuments%5CNjuWa%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cjesse%5CDocuments%5CNjuWa&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();